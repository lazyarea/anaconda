#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512
# Use CDROM installation media
cdrom
# Use graphical install
text
# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use=sda
# Keyboard layouts
keyboard --vckeymap=jp --xlayouts='jp'
# System language
lang ja_JP.UTF-8
# SELINUX
selinux --disabled

# Network information
network  --bootproto=dhcp --device=enp0s3 --noipv6 --activate
network  --bootproto=dhcp --device=enp0s8 --onboot=on --noipv6 --activate
network  --hostname=localhost.localdomain

# Root password
rootpw --iscrypted $6$xOzGCeUJwnZMbFdB$R3jVNKzPooMXwxp8oHiHdH4gymqb8VcFpZcH24Qjyp24kB8Bh/8EXbgoVtpai39G1d3FfZY3URqKXz4YKifJ7.
# System timezone
timezone Asia/Tokyo --isUtc
user --name=vagrant --password=$6$oCtY7vAST68ujIpf$mOmbiZtgstXTPPoVM46yCnM5sHqjV6XVeK54y8hmMVHpEfqQQawep3iwsvc4licHID9BXqxoX9RVimSVa82jr/ --iscrypted --gecos="vagrant"
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda
# Partition clearing information
clearpart --all --initlabel --drives=sda
# Disk partitioning information
part pv.1801 --fstype="lvmpv" --ondisk=sda --size=1    --grow
part /boot --fstype="xfs" --ondisk=sda --size=953
volgroup centos --pesize=4096 pv.1801
logvol swap  --fstype="swap" --size=512 --name=swap --vgname=centos
logvol /  --fstype="xfs" --size=1   --grow --name=root --vgname=centos

%packages
@^minimal
@core
kexec-tools

%end

%post

# add vagrant to apache group
echo "umask 002" >> ~vagrant/.bashrc


# yum
echo "yum groupinstall Development Tools"
yum groupinstall "Development Tools" -y
yum  install -y vim bind-utils tree nano epel-release git \
     fontconfig fontconfig-devel httpd net-tools \
     libicu-devel icu openssl-devel qt3 ruby gperf  sqlite-devel
yum remove -y php php-*
sed -i s/^#Server/Server/ /etc/httpd/conf/httpd.conf

# php-72
echo "php72"
yum install -y http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
yum install -y yum-utils
yum install -y --enablerepo=remi,remi-php72 php php-pecl-xdebug php-devel php-mbstring php-pdo php-gd \
        php-pgsql php-mcrypt php-zlib php-zip php-mysql php-mysqlnd \
        php-xml php-curl vim tree net-tools bind-utils

# mariadb-server
echo "mariadb"
yum install -y mariadb-server mariadb mariadb-devel
systemctl enable mariadb

# httpd
echo "httpd"
yum install -y httpd httpd-devel mod_ssl
sed -i "s/^LogLevel warn/#LogLevel warn\nLogLevel info/" /etc/httpd/conf/httpd.conf
sed -i "s/DirectoryIndex/DirectoryIndex index.php /" /etc/httpd/conf/httpd.conf
systemctl enable httpd
firewall-cmd --add-service=http --permanent
firewall-cmd --add-service=https --permanent
firewall-cmd --reload

# composer
echo "composer"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"
mv composer.phar /usr/local/bin/

# mount
echo "mounting"
mkdir -p /home/sites/project/public
chown -R apache.  /home/sites
chmod -R g+w /home/sites/project
echo "/home/sites/project/public    /var/www/html  none bind  0 0" >> /etc/fstab

# usermod
echo "usermod"
usermod  -G apache vagrant

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end
reboot --eject
